# Generated by Django 4.0.4 on 2022-10-18 09:47

import autoslug.fields
from django.db import migrations, models
import django.db.models.deletion
import lk.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Deffect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deffect', models.CharField(db_index=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Diametr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('d_gazopr', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Gazopr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gazopr', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lpumg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lpumg', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Metod_remonta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('met_remont', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Otdel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otdel', models.CharField(db_index=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Personal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_1', models.CharField(max_length=255, verbose_name='Фамилия')),
                ('name_2', models.CharField(max_length=255, verbose_name='Имя')),
                ('name_3', models.CharField(max_length=255, verbose_name='Отчество')),
                ('bithday', models.DateField(null=True, verbose_name='Дата рождения')),
                ('ustroen', models.DateField(verbose_name='Дата трудоустройства')),
                ('tabnumber', models.IntegerField(verbose_name='Табельный номер')),
                ('lvl', models.IntegerField(null=True, verbose_name='Разряд')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, max_length=100, populate_from=lk.models.instance_slug, slugify=lk.models.slugify_value, unique=True, verbose_name='URL')),
                ('examen_ot', models.DateField(blank=True, null=True, verbose_name='Проверка знаний по ОТ')),
                ('examen_eb', models.DateField(blank=True, null=True, verbose_name='Проверка знаний по ЭБ')),
                ('examen_ptm', models.DateField(blank=True, null=True, verbose_name='ПТМ')),
                ('examen_pdd', models.DateField(blank=True, null=True, verbose_name='ПДД')),
                ('instructaj', models.DateField(blank=True, null=True, verbose_name='Инструктаж')),
                ('med_osmotr', models.DateField(blank=True, null=True, verbose_name='Мед.осмотр')),
                ('flura', models.DateField(blank=True, null=True, verbose_name='Флюорография')),
                ('otpusk', models.DateField(blank=True, null=True, verbose_name='Осн.отпуск')),
                ('otpusk_d1', models.DateField(blank=True, null=True, verbose_name='Доп.отпуск')),
                ('otpusk_d2', models.DateField(blank=True, null=True, verbose_name='Доп.отпуск')),
                ('gruppa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lk.group', verbose_name='Подразделение')),
                ('otdeleniye', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='lk.otdel', verbose_name='Отделение')),
            ],
            options={
                'verbose_name': 'Персонал',
                'verbose_name_plural': 'Персонал',
                'ordering': ['name_1', 'name_2'],
            },
        ),
        migrations.CreateModel(
            name='Prof',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prof', models.CharField(db_index=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Uchavr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uchavr', models.CharField(max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Uchastok',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_uch', models.FloatField(verbose_name='Начало участка')),
                ('end_uch', models.FloatField(verbose_name='Конец участка')),
                ('status_uch', models.BooleanField(blank=True, default=False, null=True, verbose_name='Статус участка')),
                ('razresh', models.DateField(verbose_name='Дата разрешения')),
                ('numb_razresh', models.CharField(max_length=100, verbose_name='№ разрешения')),
                ('date_start_razresh', models.DateField(verbose_name='Дата начала')),
                ('date_end_razresh', models.DateField(verbose_name='Дата окончания')),
                ('date_start_plan', models.DateField(verbose_name='Дата начала')),
                ('date_end_plan', models.DateField(verbose_name='Дата начала')),
                ('kol_trub_plan', models.IntegerField(null=True, verbose_name='Кол. труб')),
                ('date_start_fact', models.DateField(verbose_name='Дата начала')),
                ('date_end_fact', models.DateField(verbose_name='Дата начала')),
                ('kol_trub_fact', models.IntegerField(blank=True, null=True, verbose_name='Кол. труб')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, max_length=100, null=True, populate_from=lk.models.instance_slug, slugify=lk.models.slugify_value, unique=True, verbose_name='URL')),
                ('d_gazopr', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='lk.diametr', verbose_name='Диаметр газопровода')),
                ('lpu', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='lk.lpumg', verbose_name='Наименование филиала ЛПУМГ')),
                ('nitka', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lk.gazopr', verbose_name='Наименование газопровода')),
            ],
            options={
                'verbose_name': 'Участок',
                'verbose_name_plural': 'Участки',
                'ordering': ['nitka', 'start_uch', 'end_uch'],
            },
        ),
        migrations.CreateModel(
            name='Truba',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(null=True, verbose_name='Номер трубы')),
                ('def_percent_1', models.FloatField(null=True, verbose_name='Процент дефекта')),
                ('def_piket_1', models.FloatField(null=True, verbose_name='Пикетаж')),
                ('def_km_1', models.FloatField(null=True, verbose_name='Километр')),
                ('def_percent_2', models.FloatField(null=True, verbose_name='Процент дефекта')),
                ('def_piket_2', models.FloatField(null=True, verbose_name='Пикетаж')),
                ('def_km_2', models.FloatField(null=True, verbose_name='Километр')),
                ('def_percent_3', models.FloatField(null=True, verbose_name='Процент дефекта')),
                ('def_piket_3', models.FloatField(null=True, verbose_name='Пикетаж')),
                ('def_km_3', models.FloatField(null=True, verbose_name='Километр')),
                ('vskrito', models.FloatField(null=True, verbose_name='Вскрыто трубы (м)')),
                ('snyato_izol', models.FloatField(null=True, verbose_name='Снято изоляции (м)')),
                ('virezka_to', models.IntegerField(null=True, verbose_name='Вырезка ТО (шт)')),
                ('virezka_kat', models.FloatField(null=True, verbose_name='Вырезка катушки (м)')),
                ('zavar_stik', models.IntegerField(null=True, verbose_name='Заварено стыков (шт)')),
                ('zavar_to', models.IntegerField(null=True, verbose_name='Заварено ТО (шт)')),
                ('izolirovano', models.FloatField(null=True, verbose_name='Изолировано трубы (м)')),
                ('zasipano', models.FloatField(null=True, verbose_name='Засыпано трубы (м)')),
                ('zaglushka_sever', models.BooleanField(default=False, verbose_name='Заглашка с северной стороны')),
                ('zaglushka_ug', models.BooleanField(default=False, verbose_name='Заглушка с южной стороны')),
                ('peremichka_up', models.BooleanField(default=False, verbose_name='Перемычка вверх')),
                ('peremichka_down', models.BooleanField(default=False, verbose_name='Перемычка вниз')),
                ('uch_trub', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lk.uchastok', verbose_name='Принадлежность к участку')),
            ],
            options={
                'verbose_name': 'Труба',
                'verbose_name_plural': 'Трубы',
                'ordering': ['number', 'uch_trub'],
            },
        ),
        migrations.CreateModel(
            name='Tehnika',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Имя техники')),
                ('gos_number', models.SlugField(max_length=100, null=True, verbose_name='Гос.номер')),
                ('icon_name', models.CharField(max_length=100, null=True, verbose_name='Изображение')),
                ('status', models.CharField(max_length=155, null=True, verbose_name='Статус')),
                ('location', models.IntegerField(blank=True, null=True, verbose_name='Местоположение')),
                ('type', models.CharField(max_length=255, verbose_name='Вид техники')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='lk.personal', verbose_name='Водитель')),
            ],
        ),
        migrations.AddField(
            model_name='personal',
            name='professiya',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='lk.prof', verbose_name='Профессия'),
        ),
        migrations.AddField(
            model_name='personal',
            name='uch_avr',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='lk.uchavr', verbose_name='Участок'),
        ),
    ]
